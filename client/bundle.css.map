{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Divider.svelte",
    "Element.svelte",
    "Image.svelte",
    "Menu.svelte",
    "Sidebar.svelte",
    "UserMenu.svelte",
    "Block.svelte",
    "index.svelte",
    "MenuItem.svelte",
    "index.svelte",
    "SidebarSettings.svelte",
    "PlusBtn.svelte",
    "edit.svelte",
    "index.svelte",
    "pages.svelte",
    "[type].svelte",
    "index.svelte"
  ],
  "sourcesContent": [
    "<script lang='ts'>import PlusBtn from \"../graphics/PlusBtn.svelte\";\nimport { store } from \"../stores\";\nexport let horizontal = false;\nexport let alwaysShow = false;\nexport let createChild;\nconst handleCreateChild = (e) => {\n    e.stopPropagation();\n    createChild();\n};\n</script>\n\n<style type=\"text/less\">.divider {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0%;\n  transition: 0.5s;\n}\n.vertical {\n  width: 10px;\n  transition: width 0.5s;\n  min-height: 10px;\n}\n.horizontal {\n  height: 10px;\n  transition: height 0.5s;\n  min-width: 10px;\n}\n.vertical:hover.active {\n  width: 50px;\n  opacity: 100%;\n  transition: 0.5s;\n  transition-delay: 0.2s;\n}\n.horizontal:hover.active {\n  height: 50px;\n  opacity: 100%;\n  transition: 0.5s;\n  transition-delay: 0.2s;\n}\n.alwaysShow {\n  opacity: 100%;\n  height: 70px;\n  margin-bottom: 500px;\n}\n</style>\n\n{#if horizontal}\n  <div\n    class=\"horizontal divider\"\n    class:active={$store.pageProps.editingLayout && !alwaysShow}\n    class:alwaysShow={alwaysShow && $store.pageProps.editingLayout}>\n    <PlusBtn\n      onClick={handleCreateChild}\n      opaque\n      hidden={!$store.pageProps.editingLayout} />\n  </div>\n{:else}\n  <div class=\"vertical divider\" class:active={$store.pageProps.editingLayout}>\n    <PlusBtn\n      onClick={handleCreateChild}\n      opaque\n      hidden={!$store.pageProps.editingLayout} />\n  </div>\n{/if}\n",
    "<script lang='ts'>import { store, dispatchToStore } from \"../stores\";\nimport { changeElementType } from \"../actions\";\nimport QuillText from \"./QuillText.svelte\";\nimport Image from \"./Image.svelte\";\nimport Menu from './Menu.svelte';\nexport let id;\nlet selected = $store.elementProps[id].type;\nconst changeType = (type) => {\n    dispatchToStore(changeElementType({ id, type }));\n    selected = type;\n};\n</script>\n\n<style type=\"text/less\">.block-types-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 5px;\n  flex-wrap: wrap;\n}\n.block-types-container button {\n  margin: 5px;\n}\n.select-button {\n  border: 1px dashed grey;\n  background-color: white;\n  color: #585858;\n  cursor: pointer;\n}\n.select-button:hover {\n  color: black;\n  border: 1px dashed black;\n}\n</style>\n\n{#if !selected}\n  <div class=\"block-types-container\">\n    <button\n      class='select-button'\n      on:click={() => changeType('image')}>Image</button>\n    <button \n      class='select-button'\n      on:click={() => changeType('quill')}>Text & Image</button>\n    <button \n      class='select-button'\n      on:click={() => changeType('menu')}>Menu</button>\n  </div>\n\n{:else if selected === 'input'}\n  <input type=\"text\" />\n{:else if selected === 'image'}\n  <Image elementId={id} />\n{:else if selected === 'quill'}\n  <QuillText elementId={id} />\n{:else if selected === 'menu'}\n  <Menu elementId={id}/>\n{/if}\n",
    "<script lang='ts'>import { uploadFile } from \"../ajax\";\nimport { store, dispatchToStore } from \"../stores\";\nimport { updateImageSrc } from \"../actions\";\nimport { onMount } from \"svelte\";\nexport let elementId;\nlet image;\nlet input;\nlet hideInput = false;\nlet hideImage = true;\nconst handleUpload = () => {\n    if (input.files && input.files[0]) {\n        image.src = URL.createObjectURL(input.files[0]);\n        image.onload = handleImageLoaded;\n    }\n};\nconst handleImageLoaded = () => {\n    hideInput = true;\n    hideImage = false;\n    uploadFile({ file: input.files[0] })\n        .then((res) => {\n        dispatchToStore(updateImageSrc({ src: res.data.data.url, elementId }));\n    })\n        .catch((err) => console.log(\"handleImageLoaded: failed to upload to host\"));\n};\nonMount(() => {\n    let source = $store.elementProps[elementId].src;\n    if (source) {\n        image.src = source;\n        hideImage = false;\n        hideInput = true;\n    }\n});\n</script>\n\n<style>\n  img {\n    width: 100%;\n  }\n  .image-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  input {\n    border: none;\n    margin: auto;\n    width: 220px;\n  }\n  .hideInput,\n  .hideImage {\n    display: none;\n  }\n</style>\n\n<div class=\"image-container\">\n  <input\n    type=\"file\"\n    bind:this={input}\n    on:change={handleUpload}\n    class:hideInput />\n  <img src=\"#\" alt=\"\" bind:this={image} class:hideImage />\n</div>\n",
    "<script lang='ts'>import { store, dispatchToStore } from '../stores';\nimport { saveMenu } from '../actions';\n;\n;\nimport { selectLogoData } from '../selectors';\nexport let elementId;\nlet openMenu = false;\nlet rightMenu;\nlet showToolbar = false;\nlet logoData;\nlet menuData;\nconst DEFALT_MENU_DATA = [\n    { href: '#', text: 'Products' },\n    { href: '#', text: 'Pricing' },\n    { href: '#', text: 'Contact' },\n];\nconst DEFAULT_LOGO_DATA = {\n    name: 'Home',\n    href: '/',\n};\nconst selectMenuData = (store) => (store.elementProps[elementId] || {}).menuData;\nif (!selectMenuData($store)) {\n    dispatchToStore(saveMenu({ elementId, menuData: DEFALT_MENU_DATA, logoData: DEFAULT_LOGO_DATA }));\n}\n$: showToolbar = $store.pageProps.showToolbar;\n$: logoData = selectLogoData($store, elementId);\n$: menuData = selectMenuData($store);\n</script>\n\n<style>\n  .menu {\n    padding: 10px;\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: row;\n  }\n  .menu-item {\n    padding: 5px;\n    color: black;\n  }\n\n  .hamburger {\n    display: none;\n    cursor: pointer;\n    float: right;\n    margin:auto 0;\n    padding: 10px;\n    height: 28px;\n  }\n\n  .logo {\n    display: inline-block;\n    margin-top: auto;\n    margin-bottom: auto;\n    color: black;\n  }\n\n\n  @media screen and (max-width: 600px){\n    .right-menu { \n      display: none;\n      float: none;\n    }\n    .hamburger { \n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      float:none;\n    }\n    .menu {\n      height: auto;\n      position: relative;\n      display: block;\n    }\n    .menu-item {\n      padding-left: 0px;\n    }\n    .openMenu {\n      display: block;\n    }\n    .logo {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (max-width: 866px){\n    .showToolbar.right-menu { \n      display: none;\n      float: none;\n    }\n    .showToolbar.hamburger { \n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      float:none;\n    }\n    .showToolbar.menu {\n      height: auto;\n      position: relative;\n      display: block;\n    }\n    .showToolbar.menu-item {\n      padding-left: 0px;\n    }\n    .showToolbar.openMenu {\n      display: block;\n    }\n    .logo {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  .place-holder {\n    visibility: hidden;\n  }\n</style>\n\n<nav class='menu' class:showToolbar>\n  {#if logoData && logoData.name}\n    {#if logoData.name}\n    <a href={logoData.href}>\n      <h1 class='logo' >{logoData.name}</h1>\n    </a>\n      \n    {/if}\n  {:else}\n    <h1 class='place-holder logo'>PlaceHolder</h1>\n  {/if}\n\n    <img\n      on:click={() => openMenu = !openMenu} \n      class='hamburger'\n      class:showToolbar\n      src='menu.svg' \n      alt='menu'\n    />\n  <div \n    class='right-menu' \n    class:openMenu \n    class:showToolbar\n    bind:this={rightMenu}\n  >\n    {#each menuData || [] as item, index (index)}\n      <a\n        class='menu-item'\n        class:openMenu\n        class:showToolbar\n        href={item.href}\n      >{item.text}</a>\n    {/each}\n  </div>\n\n</nav>",
    "<script lang='ts'>import { store } from '../stores';\nimport MenuSettings from './settings/MenuSettings/index.svelte';\nimport BlockSettings from './settings/BlockSettings/index.svelte';\nimport SidebarSettings from './settings/SidebarSettings.svelte';\n;\nconst selectElementId = (store) => {\n    let blockId = (store.pageProps.focusedBlock || {}).id;\n    if (store.blockProps[blockId]) {\n        return (store.blockProps[blockId].elements || [undefined])[0];\n    }\n};\nconst selectElementProps = (store) => {\n    let elementId = selectElementId(store);\n    if (!elementId) {\n        return;\n    }\n    return store.elementProps[elementId];\n};\n</script>\n\n<style>\n  .element-title {\n    margin-bottom: 0px;\n  }\n</style>\n\n\n<SidebarSettings>\n  {#if selectElementProps($store)}\n    <BlockSettings />\n    <h3 class='element-title'>Element Settings</h3>\n    {#if selectElementProps($store).type === 'menu'}\n      <MenuSettings elementId={selectElementId($store)} />\n    {/if}\n  {:else}\n      Select a block to change its settings\n  {/if}\n</SidebarSettings>\n\n",
    "<script lang='ts'>import { logout } from '../ajax';\nexport let username;\nconst handleLogout = () => {\n    logout()\n        .then(() => window.location.reload())\n        .catch(err => console.log('Logout error'));\n};\n</script>\n\n<style>\n  .user-menu {\n    float: right;\n    right: 0;\n    top: 0;\n    padding: 10px;\n    position: absolute;\n    z-index: 50;\n  }\n  .logout {\n    cursor: pointer;\n  }\n</style>\n\n<div class='user-menu'>\n  {#if username}\n    <span class='username'>{username}</span>\n    <span>|</span>\n    <span class='logout' on:click={handleLogout}>Logout</span>\n  {:else}\n    <a href='/auth/register'>Register</a>\n    <span>|</span>\n    <a href='/auth/login'>Login</a>\n  {/if}\n</div>\n\n",
    "<script lang='ts'>import { onMount } from \"svelte\";\nimport Divider from \"../Divider.svelte\";\nimport Element from \"../Element.svelte\";\nimport { levelConfig } from \"../../stores\";\nimport { store, dispatchToStore } from \"../../stores\";\nimport { focusBlock, createBlockChild } from \"../../actions\";\n;\nimport { selectBackgroundImage, selectBackgroundColor } from '../../selectors';\nexport let level = 0;\nexport let id = \"root\";\nexport let hideFirstDivider = false;\nlet container;\nlet hidden = true;\nlet backgroundImage;\nlet root;\nlet block;\n// let backgroundColor: string;\n$: backgroundImage = selectBackgroundImage($store, id);\n// $: backgroundColor = selectBackgroundColor($store, id);\n// $: if (container && block && $store.blockIds['root'][0] === id && block.offsetWidth){\n//   //@ts-ignore\n//   container.style.width = String(block.offsetWidth + 30) + 'px' ;\n//   container.style['margin-left'] = '-15px';\n//   container.style['margin-right'] = '-10px';\n// }\nconst createChild = (index) => {\n    createBlockChild(id, index);\n};\nconst getLevelConfig = (level) => $levelConfig[level] || $levelConfig.default;\nonMount(() => {\n    block = document.getElementsByClassName('block')[0];\n    let props = $store.blockProps[id];\n    if (props.height) {\n        container.style.height = props.height;\n    }\n    if (props.vertical) {\n        container.style[\"flex-direction\"] = \"column\";\n    }\n    hidden = false;\n    if (backgroundImage) {\n        let imageProps = $store.blockProps[id].backgroundImage;\n        setBackgroundImage(imageProps.url, imageProps.size, imageProps.position);\n    }\n    // if ($store.blockIds['root'][0] === id) {\n    //   console.log('hidding divider')\n    //   hideFirstDivider = true;\n    //   container.style['margin-left'] = '-15px';\n    //   container.style['margin-right'] = '-10px';\n    //   let block = document.getElementsByClassName('block')[0];\n    //   //@ts-ignore\n    //   container.style.width = String(block.offsetWidth + 30) + 'px' ;\n    // }\n    if (id === 'root') {\n        root = true;\n    }\n});\n$: if ((backgroundImage || {}).reload && container) {\n    let imageProps = $store.blockProps[id].backgroundImage;\n    setBackgroundImage(imageProps.url, imageProps.size, imageProps.position);\n}\n$: {\n    let backgroundColor = selectBackgroundColor($store, id);\n    if (container) {\n        setBackgroundColor(backgroundColor);\n    }\n}\nconst setBackgroundImage = (url, size = 'cover', position = 'center') => {\n    container.style['background-image'] = url ? `url(\"${url}\")` : '';\n    container.style['background-size'] = size;\n    container.style['background-position'] = position;\n};\nconst setBackgroundColor = (color = undefined) => {\n    container.style['background-color'] = color;\n};\nconst shouldHideControl = (store) => {\n    if (hasChildren(store) || !store.pageProps.editingLayout)\n        return true;\n};\nconst hasChildren = (store) => {\n    if (store.blockIds) {\n        return store.blockIds[id].length > 0;\n    }\n};\nconst selectBlockIds = (store) => {\n    return store.blockIds[id];\n};\nconst handleFocus = (e) => {\n    e.stopPropagation();\n    if ($store.pageProps.editingLayout) {\n        dispatchToStore(focusBlock({ id }));\n    }\n};\nconst isInFocus = (store) => (store.pageProps.focusedBlock || {}).id === id;\n</script>\n\n<style type=\"text/less\">.container {\n  display: flex;\n  position: relative;\n  flex: 1;\n  align-items: stretch;\n  width: 100%;\n  opacity: 100%;\n  transition: opacity 0.5s;\n}\n.shadow {\n  border-radius: 3px;\n  border: 1px dashed #999999;\n}\n@media screen and (max-width: 600px) {\n  .container {\n    flex-direction: column;\n  }\n}\n.elements-container {\n  height: 100%;\n  width: 100%;\n}\n.elements-container {\n  display: block;\n  width: 100%;\n}\n.focused {\n  z-index: 5;\n}\n.focused::before {\n  content: \".\";\n  color: transparent;\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  border-radius: 3px;\n  border: 2px solid white;\n  box-shadow: 0 0 0 2px black;\n  pointer-events: none;\n}\n.hidden {\n  opacity: 0%;\n}\n</style>\n\n{#if getLevelConfig(level).headDivider && !hideFirstDivider}\n  <!-- <Divider \n    horizontal={true} \n    createChild={() => createChild(0)} \n  /> -->\n{/if}\n<div\n  class=\"container\"\n  class:shadow={!shouldHideControl($store)}\n  class:focused={isInFocus($store)}\n  class:hidden\n  class:root\n  bind:this={container}\n  on:click={handleFocus}>\n  {#if selectBlockIds($store).length == 0}\n    <div class=\"elements-container\">\n      {#each $store.blockProps[id].elements as elementId (elementId)}\n        <Element id={elementId} />\n      {/each}\n    </div>\n  {/if}\n  {#each selectBlockIds($store) as childId, index (childId)}\n    <svelte:self level={level + 1} id={childId} />\n    {#if index !== selectBlockIds($store).length - 1}\n      {#if level % 2 == 0}\n        <Divider horizontal={true} createChild={() => createChild(index + 1)} />\n      {:else}\n        <Divider createChild={() => createChild(index + 1)} />\n      {/if}\n    {/if}\n  {/each}\n</div>\n{#if getLevelConfig(level).tailDivider}\n  <Divider\n    alwaysShow\n    horizontal={true}\n    createChild={() => createChild(selectBlockIds($store).length)} />\n{/if}\n",
    "<script lang='ts'>import { onMount } from 'svelte';\nimport { dispatchToStore, store } from '../../../stores';\nimport { selectFocusedBlockVertical, selectFocusedBlockId, selectBackgroundColor, } from '../../../selectors';\nimport { handleAddBlock, handleDeleteBlock, setBackgroundImage, setBackgroundColor } from '../../../actions/';\nimport BreadCrumbs from './BreadCrumbs.svelte';\nimport { uploadFile } from '../../../ajax';\nlet imageInput;\nlet focusedBlock;\nlet backgroundColor = \"#000000\";\n$: {\n    focusedBlock = selectFocusedBlockId($store);\n}\nconst handleAdd = () => {\n    // let focusedBlock: string = selectFocusedBlockId($store);\n    handleAddBlock(focusedBlock, $store);\n};\nconst handleDelete = () => {\n    // let focusedBlock: string = selectFocusedBlockId($store);\n    handleDeleteBlock(focusedBlock);\n};\nconst handleUpload = () => {\n    if (imageInput.files && imageInput.files[0]) {\n        let tempUrl = URL.createObjectURL(imageInput.files[0]);\n        console.log('tempUrl', tempUrl);\n        dispatchToStore(setBackgroundImage({ blockId: focusedBlock, url: tempUrl, reload: true }));\n        console.log('blockProps', $store.blockProps[focusedBlock]);\n        uploadFile({ file: imageInput.files[0] })\n            .then((res) => {\n            dispatchToStore(setBackgroundImage({ blockId: focusedBlock, url: res.data.data.url }));\n        })\n            .catch(() => console.log('handleUpload: failed to upload to host'));\n    }\n};\nconst handleResetBackground = () => {\n    dispatchToStore(setBackgroundImage({ blockId: focusedBlock, reload: true }));\n    dispatchToStore(setBackgroundColor({ blockId: focusedBlock, color: '' }));\n};\nconst handleChangeBackgroundColor = () => {\n    dispatchToStore(setBackgroundColor({ blockId: focusedBlock, color: backgroundColor }));\n};\n</script>\n\n<style>\n  input {\n    width: 100%;\n  }\n  #background-color-picker{\n    width: 300px;\n    height: 40px;\n    margin-bottom: 0;\n  }\n  .color-picker-btn {\n    height: 40px;\n    margin-bottom: 0;\n    margin-left: 10px;\n    width: 100%;\n  }\n  .color-setting-container{\n    display: flex;\n    align-items: center;\n  }\n  label {\n    margin-bottom: 5px;\n  }\n  .reset-background {\n    margin-top: 10px;\n  }\n</style>\n\n\n<h3>Block Settings</h3>\n<BreadCrumbs />\n<button \n  on:click={() => handleAdd()}>\n  {selectFocusedBlockVertical($store)? 'Split Vertically' : 'Split Horizontally'}\n</button>\n<button\n  on:click={() => handleDelete()}>\n  Delete Block</button>\n<div class='input-container'>\n  <label for='background-image-upload'>Background Image</label>\n  <input \n    bind:this={imageInput} \n    type='file' \n    id='background-image-upload'\n    on:change={handleUpload}\n  />\n  <label for='background-color-picker'>Background Color</label>\n  <div class='color-setting-container'>\n    <input\n      id='background-color-picker'\n      type='color'\n      bind:value={backgroundColor}\n    />\n    <button \n      on:click={handleChangeBackgroundColor}\n      class='color-picker-btn' >Set</button>\n  </div>\n  \n</div>\n\n<button\n  on:click={handleResetBackground}\n  class='reset-background'\n>Reset Background</button>\n",
    "<script lang='ts'>let editing = false;\nexport let text;\nexport let href;\nexport let index;\nexport let handleDelete;\nexport let handleUpdate;\n</script>\n<style>\n  .item-container {\n    border: 1px solid grey;\n    padding: 5px;\n    margin-bottom: 5px;\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  button {\n    margin:0;\n    margin-left: 10px;\n  }\n  .edit-panel {\n    flex-direction: column;\n  }\n  input {\n    width: 100%;\n  }\n  .edit-panel > button {\n    margin: 0;\n  }\n</style>\n\n<div class='item-container'>\n  {#if editing}\n    <div class='edit-panel'>\n      <label for={'item-text-'+index}>Name</label>\n      <input id={'item-text-'+index} bind:value={text} />\n      <label for={'item-href-'+index}>Link</label>\n      <input id={'item-href-'+index} bind:value={href} />\n      <button\n        on:click={() => {\n            editing = false;\n            handleUpdate();\n          }\n        }\n      >Done</button>\n    </div>\n  {:else}\n    <span>{text}</span>\n    <div class='button-container'>\n      <button\n        on:click={() => editing = true}\n      >Edit</button>\n      <button\n        on:click={() => handleDelete(index)}\n      >Delete</button>\n    </div>\n\n  {/if}\n</div>\n",
    "<script lang='ts'>import { store, dispatchToStore } from '../../../stores';\nimport { saveMenu } from '../../../actions';\nimport MenuItem from './MenuItem.svelte';\n;\nimport { selectLogoData } from '../../../selectors';\nexport let elementId;\nlet menuData;\nlet logoData = selectLogoData($store, elementId);\nlet logoName = logoData ? logoData.name : '';\nlet logoHref = logoData ? logoData.href : '';\n$: menuData = $store.elementProps[elementId].menuData || [];\nconst handleUpdate = () => {\n    logoData = Object.assign(Object.assign({}, logoData), { name: logoName, href: logoHref });\n    save();\n};\nconst save = () => {\n    dispatchToStore(saveMenu({ elementId, menuData, logoData }));\n};\nconst handleAdd = () => {\n    menuData = [\n        ...menuData,\n        {\n            text: 'New Item',\n            href: '',\n        }\n    ];\n    save();\n};\nconst handleDelete = (index) => {\n    menuData = menuData.filter((_, i) => i !== index);\n    save();\n};\n</script>\n\n<style>\n  #logo-image-upload {\n    width: 100%;\n  }\n</style>\n\n\n<p>Logo</p>\n  <label for='logo-name-input'>Name</label>\n  <input \n    id='logo-name-input' \n    type='text' \n    bind:value={logoName}\n    on:keyup={handleUpdate}\n  >\n  <label for='logo-href'>Link</label>\n  <input\n    id='logo-href'\n    type='text'\n    bind:value={logoHref}\n    on:keyup={handleUpdate}\n  >\n  <div class='logo-image-upload-container'>\n    <label for='logo-image-upload'>Image</label>\n    <input id='logo-image-upload' type=file />\n  </div>\n\n<p>Links</p>\n{#each menuData as item, index (index)}\n  <MenuItem \n    bind:text={item.text}\n    bind:href={item.href}\n    handleUpdate={handleUpdate}\n    handleDelete={handleDelete}\n    index={index}\n  />\n{/each}\n<button on:click={() => handleAdd()}>Add</button>\n\n",
    "<script lang='ts'>import { store, dispatchToStore } from '../../stores';\nimport { focusBlock, toggleEditLayout, toggleEditText, toggleToolbar, togglePublishPage } from '../../actions';\nimport { selectShowToolbar } from '../../selectors';\nconst toggleEdit = () => {\n    if ($store.pageProps.editingLayout) {\n        dispatchToStore(focusBlock({ id: '' }));\n    }\n    dispatchToStore(toggleEditLayout());\n    dispatchToStore(toggleEditText());\n};\nconst handleToggleToobar = () => dispatchToStore(toggleToolbar());\nconst handlePublishPage = () => dispatchToStore(togglePublishPage());\n</script>\n\n<style>\n  .toolbar-toggle {\n\t\tposition: fixed;\n\t\tbottom: 10px;\n\t\tleft: 30px;\n\t\tz-index: 20;\n\t\tborder: 2px solid white;\n\t\tbackground-color: black;\n\t\tcolor: white;\n\t\topacity: 60%;\n\t\tbox-shadow: 0 0 3px grey;\n\t}\n\t.toolbar-toggle:hover,\n\t.preview-btn:hover {\n\t\topacity: 100%;\n\t\tbox-shadow: 0 0 7px grey;\n\t}\n\t.preview-btn {\n\t\tposition: fixed;\n\t\tbottom: 10px;\n\t\tleft: 160px;\n\t\tz-index: 20;\n\t\tborder: 2px solid white;\n\t\tbackground-color: black;\n\t\tcolor: white;\n\t\topacity: 60%;\n\t\tbox-shadow: 0 0 3px grey;\n\t}\n\n  .close-toolbar-btn {\n\t\tposition: absolute;\n\t\tright: 10px;\n\t\ttop: 10px;\n\t\tpadding: 5px 9px;\n\t}\n\n  button {\n\t\tcursor: pointer;\n\t}\n\t#toolbar {\n\t\tposition: fixed;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: flex-start;\n\t\talign-items: left;\n\t\tbackground-color: rgb(255, 255, 255);\n\t\ttop: 0px;\n\t\tleft: 0px;\n\t\twidth: 250px;\n\t\theight: 100%;\n\t\tbox-shadow: 1px 0px 5px grey;\n\t\tpadding: 10px 8px;\n    overflow:auto;\n\t}\n\n  .hidden {\n\t\tvisibility: hidden;\n\t}\n\n  .status {\n    margin-bottom: 20px;\n  }\n</style>\n\n<div id=\"toolbar\" class:hidden={!$store.pageProps.showToolbar}>\n  <div\n    class='status'\n  >{`Status: ${$store.saved ? 'Saved' : 'Modified'}`}</div>\n  <button\n    on:click={handleToggleToobar}\n    class=\"close-toolbar-btn\">x</button>\n  <button on:click={toggleEdit}>\n    {$store.pageProps.editingLayout ? 'Preview Page' : 'Edit Page'}\n\t</button>\n\t<button on:click={handlePublishPage}>\n\t\t{$store.published ? 'Unpublish Page' : 'Publish Page'}\n\t</button>\n  <slot />\n</div>\n<button \n  class='toolbar-toggle'\n  class:hidden={selectShowToolbar($store)}\n  on:click={handleToggleToobar}\n  >Show Toolbar</button>\n<button \n  class=\"preview-btn\" \n  class:hidden={selectShowToolbar($store)}\n  on:click={toggleEdit}>\n  {$store.pageProps.editingLayout ? 'Preview' : 'Edit'}\n</button>\n\n",
    "<script lang='ts'>export let hidden = false;\nexport let position = '';\nexport let opaque = false;\nexport let transparent = false;\nexport let onClick;\n</script>\n\n<style type=\"text/less\">.plus-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 10;\n  box-shadow: 0px 0px 5px 1px #acacac;\n  padding: 7px;\n  border-radius: 50%;\n  width: 22px;\n  height: 22px;\n  background-color: white;\n  opacity: 100%;\n  cursor: pointer;\n}\n.transparent {\n  opacity: 0%;\n}\n.opaque {\n  opacity: 100%;\n}\n.plus-btn:hover {\n  opacity: 100%;\n  box-shadow: 0px 0px 9px 1px #acacac;\n  transition: 0.5s;\n}\n.plus-btn:active {\n  box-shadow: 0px 0px 2px #7a7a7a;\n  background-color: #f7f7f7;\n}\n.hidden {\n  display: none;\n}\n.right {\n  right: 30px;\n  top: 50%;\n  transform: translate(0, -50%);\n}\n.bottom {\n  bottom: 10px;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\nimg {\n  width: 25px;\n}\n</style>\n\n<div\n  class=\"plus-btn\"\n  class:hidden\n  class:right={position === 'right'}\n  class:bottom={position === 'bottom'}\n  class:transparent\n  class:opaque\n  alt=\"add block\"\n  on:click={onClick}>\n  <img src=\"plus-3.svg\" alt=\"plus button\" />\n</div>\n",
    "<script context=\"module\" lang='ts'>var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { store } from \"../../../stores\";\n;\nexport function preload(page, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const { username, pageId } = page.params;\n            const url = `api/${username}/${pageId}/`;\n            // Redirect to read only mode if user is not owner\n            if (session.username !== username) {\n                this.redirect(302, `/${username}/${pageId}`);\n                return;\n            }\n            const res = yield this.fetch(url);\n            const resJson = yield res.json();\n            // Create a new page if create is true and no existing has been found\n            if (!resJson) {\n                if (page.query.create === \"true\") {\n                    return {\n                        pageId,\n                        create: true,\n                        storePreloaded: undefined,\n                        owner: username,\n                        username: session.username\n                    };\n                }\n                else {\n                    this.error(404, 'Page not found');\n                }\n            }\n            if (page.query.create === \"true\") {\n                this.redirect(302, `/${username}/${pageId}/edit`);\n            }\n            // Set up page if it exists\n            store.set(resJson);\n            return {\n                storePreloaded: resJson,\n                pageId,\n                owner: username,\n                create: false,\n                username: session.username\n            };\n        }\n        catch (err) {\n            this.error(500, err);\n        }\n    });\n}\n</script>\n\n<script lang='ts'>import Block from \"../../../components/block/Block.svelte\";\nimport { saveUserPage, getUserPage } from \"../../../ajax\";\nimport { dispatchToStore } from \"../../../stores\";\nimport { focusBlock, setStoreSaved, } from \"../../../actions\";\nimport { onMount } from \"svelte\";\nimport { selectShowToolbar } from \"../../../selectors\";\nimport Sidebar from \"../../../components/Sidebar.svelte\";\nexport let storePreloaded;\nexport let pageId;\nexport let owner;\nexport let create;\nexport let username;\nlet hidden = true;\nif (storePreloaded) {\n    $store = storePreloaded;\n}\nconst handleSavePage = () => {\n    saveUserPage(username, pageId, $store)\n        .then(() => {\n        console.log(\"saved\");\n        dispatchToStore(setStoreSaved());\n    })\n        .catch(() => console.log(\"save error:\"));\n};\nconst autoSave = () => {\n    handleSavePage();\n    setInterval(() => {\n        if (!$store.saved) {\n            handleSavePage();\n        }\n    }, 5000);\n    window.onbeforeunload = () => {\n        if (!$store.saved) {\n            alert(\"Page not saved, confirm to leave?\");\n            handleSavePage();\n        }\n    };\n};\nconst confirmBeforeSave = () => {\n    getUserPage(owner, pageId)\n        .then((res) => {\n        if (!res.data) {\n            autoSave();\n        }\n        else {\n            console.log(\"Page already exist, redirecting\");\n            window.location.assign(window.location.href.replace(\"?create=true\", \"\"));\n        }\n    })\n        .catch((err) => {\n        console.log(\"get Page error retrying in 5s\", err);\n        setTimeout(confirmBeforeSave, 5000);\n    });\n};\nonMount(() => {\n    if (create) {\n        confirmBeforeSave();\n    }\n    else {\n        autoSave();\n    }\n    hidden = false;\n});\n</script>\n\n<style>\n\t:global(body) {\n\t\tpadding: 0;\n\t\tbackground-color: #ffffff;\n\t}\n\t:global(.ql-toolbar) {\n\t\tz-index: 100;\n\t}\n\n\tmain {\n\t\tposition: relative;\n\t}\n\t.page {\n\t\tmargin: 0;\n\t}\n\n\t.makeWayForToolbar {\n\t\tmargin-left: 266px;\n\t}\n\n\t.block {\n\t\tmax-width: 1024px;\n\t\tmargin: auto;\n\t\tpadding: 0 1em;\n\t}\n\n\t.hidden {\n\t\tvisibility: hidden;\n\t}\n\n</style>\n\n<main class:hidden>\n  <div \n    class=\"page\"\n    class:makeWayForToolbar={selectShowToolbar($store)}\n    on:click={() => dispatchToStore(focusBlock({id: ''}))}\n    >\n    <div class='block'>\n      <Block />\n    </div>\n  </div>\n  <Sidebar />\n</main>\n",
    "<script context=\"module\" lang='ts'>var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { store } from \"../../../stores\";\n;\nexport function preload(page, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const { username, pageId } = page.params;\n            const url = `api/${username}/${pageId}.json`;\n            const res = yield this.fetch(url);\n            const resJson = yield res.json();\n            if (!resJson) {\n                this.error(404, 'Page does not exist');\n            }\n            resJson.pageProps.editingLayout = false;\n            resJson.pageProps.focusedBlock = '';\n            // Set up page if it exists\n            store.set(resJson);\n            return {\n                storePreloaded: resJson,\n                pageId,\n                owner: username,\n                create: false,\n                username: session.username,\n            };\n        }\n        catch (err) {\n            this.error(500, err);\n        }\n    });\n}\n</script>\n\n<script lang='ts'>import Block from \"../../../components/block/Block.svelte\";\nimport { onMount } from \"svelte\";\nexport let storePreloaded;\nexport let owner;\nexport let username;\nexport let pageId;\nlet hidden = true;\nif (storePreloaded) {\n    $store = storePreloaded;\n}\nonMount(() => hidden = false);\n</script>\n\n<style>\n\t:global(body) {\n\t\tpadding: 0;\n\t\tbackground-color: #ffffff;\n\t}\n\t:global(.ql-toolbar) {\n\t\tz-index: 100;\n\t}\n\n\t.block {\n\t\tmax-width: 1024px;\n\t\tmargin: auto;\n\t\tpadding: 0 1em;\n\t}\n\n\t.hidden {\n\t\tvisibility: hidden;\n\t}\n\n  .edit-btn {\n    position:fixed;\n    bottom: 20px;\n    left: 40px;\n    padding: 10px;\n\t\tborder: 2px solid white;\n\t\tbackground-color: black;\n\t\tcolor: white;\n\t\topacity: 60%;\n\t\tbox-shadow: 0 0 3px grey;\n  }\n\n</style>\n\n<main class:hidden>\n  <div class='block'>\n    <Block />\n  </div>\n  {#if username === owner }\n    <a class='edit-btn' href={`/${username}/${pageId}/edit`}>Edit this page</a>\n  {/if}\n</main>\n",
    "<script context=\"module\" lang='ts'>var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function preload(page, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const { username, pageId } = page.params;\n            const url = `/api/${username}/pages.json`;\n            const res = yield this.fetch(url);\n            const resJson = yield res.json();\n            return { pages: resJson, username: session.username, owner: username };\n        }\n        catch (error) {\n            this.error(500, error);\n        }\n    });\n}\n</script>\n\n<script lang='ts'>import { v4 as uuid } from \"uuid\";\nimport UserMenu from '../../components/UserMenu.svelte';\nexport let pages;\nexport let username;\nexport let owner;\nlet pageTitle;\nlet shortId = uuid().split(\"-\")[0];\nlet re = /-.{8}$/g;\nconst createRedirect = (title) => `/${username}/${title.replace(\" \", \"_\")}-${shortId}/edit/?create=true`;\n</script>\n<style>\n  main {\n    padding: 0 1em;\n    position: relative;\n    margin-left: 20%;\n  }\n  @media screen and (max-width: 600px){\n    main {\n      margin-left: 0;\n    }\n  }\n\n</style>\n\n<main>\n  <h1>{`${owner}'s Pages`}</h1>\n  <UserMenu username={username}/>\n  {#if username}\n    <form>\n      <label for=\"page-name-input\">Enter a page title</label>\n      <input id=\"page-name-input\" bind:value={pageTitle} />\n      {#if pageTitle}<a href={createRedirect(pageTitle)}>create</a>{/if}\n    </form>\n  {/if}\n  <ul>\n    {#each (pages || []) as page (page.pageId)}\n      <li>\n        <a href={`/${owner}/${page.pageId}`}>\n          {`${page.pageId.replace(re, '').replace('_', ' ')} ${page.published ? '': '(draft)'}`}\n        </a>\n      </li>\n    {/each}\n  </ul>\n</main>\n",
    "<script context='module' lang='ts'>var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function preload(page, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let type = page.params.type;\n        console.log('type', type);\n        console.log(\"['login', 'register'].includes(type)\", ['login', 'register'].includes(type));\n        if (!['login', 'register'].includes(type)) {\n            this.error(404, 'Not found');\n        }\n        ;\n        const { user, csrf } = session || {};\n        if (user) {\n            return this.redirect(302, '/');\n        }\n        return { csrf, type };\n    });\n}\n</script>\n\n<script lang='ts'>import { register, login } from '../../ajax';\nexport let csrf;\nexport let type;\nconst formProps = {\n    login: {\n        h1: 'Log In',\n        buttonText: 'Login',\n        handleSubmit: login\n    },\n    register: {\n        h1: 'Register for an account',\n        buttonText: 'Register',\n        handleSubmit: register\n    }\n};\nconst props = formProps[type];\nlet username;\nlet password;\nlet errorMsg;\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleSubmit({ username, password })\n        .then(user => {\n        console.log('redirecting to ', `/${username}/pages`);\n        window.location.assign(`/${username}/pages`);\n    })\n        .catch(err => errorMsg = err.response.data.error);\n};\n</script>\n\n<style>\n  .input-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    background-color: thistle;\n    flex-direction: column;\n  }\n  .panel {\n    background-color: rgb(133, 192, 192);\n    padding: 30px;\n    width: 400px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .input-container:after{\n    content: 'foo';\n    visibility: hidden;\n    height: 200px;\n  }\n  h1 {\n    margin-top: 0;\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n  }\n  button {\n    margin-top: 10px;\n    width: 80px\n  }\n  .capitalize {\n    text-transform: capitalize;\n  }\n  .error {\n    color: red;\n  }\n</style>\n\n<div class='input-container'>\n  <div class='panel'>\n    <h1>{props.h1}</h1>\n    {#if errorMsg }\n    <p class='error'>{errorMsg}</p>\n    {/if}\n    <form on:submit={handleSubmit}>\n      <label for='username-input'>Username</label>\n      <input id='username-input' type='text' bind:value={username} required/>\n      <label for='password-input-1'>Password</label>\n      <input id='password-input-1' type='password' bind:value={password} required/>\n      <input hidden value={csrf} />\n      <button class='capitalize' >{props.buttonText}</button>\n    </form>\n  </div>\n\n</div>",
    "<script context=\"module\" lang='ts'>var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { store } from \"../stores\";\n;\nexport function preload(page, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const url = `api/lujason2015/index-24d20d86.json`;\n            const res = yield this.fetch(url);\n            const resJson = yield res.json();\n            if (!resJson) {\n                this.error(404, 'Page does not exist');\n            }\n            resJson.pageProps.editingLayout = false;\n            resJson.pageProps.focusedBlock = '';\n            // Set up page if it exists\n            store.set(resJson);\n            return {\n                storePreloaded: resJson,\n                pageId: 'index-24d20d86',\n                owner: 'lujason2015',\n                create: false,\n                username: session.username,\n            };\n        }\n        catch (err) {\n            this.error(500, err);\n        }\n    });\n}\n</script>\n\n<script lang='ts'>import Block from \"../components/block/Block.svelte\";\nimport UserMenu from '../components/UserMenu.svelte';\nimport { onMount } from \"svelte\";\nexport let storePreloaded;\nexport let owner;\nexport let username;\nexport let pageId;\nlet hidden = true;\nif (storePreloaded) {\n    $store = storePreloaded;\n}\nonMount(() => hidden = false);\n</script>\n\n<style>\n\t:global(body) {\n\t\tpadding: 0;\n\t\tbackground-color: #ffffff;\n\t}\n\t:global(.ql-toolbar) {\n\t\tz-index: 100;\n\t}\n\n\t.block {\n\t\tmax-width: 1024px;\n\t\tmargin: auto;\n\t\tpadding: 0 1em;\n\t}\n\n\t.hidden {\n\t\tvisibility: hidden;\n\t}\n\n  .edit-btn {\n    position:fixed;\n    bottom: 20px;\n    left: 40px;\n    padding: 10px;\n\t\tborder: 2px solid white;\n\t\tbackground-color: black;\n\t\tcolor: white;\n\t\topacity: 60%;\n\t\tbox-shadow: 0 0 3px grey;\n  }\n\n\n</style>\n\n<main class:hidden>\n  <UserMenu username={username} />\n  \n  <div class='block'>\n    <Block />\n  </div>\n  {#if username === owner }\n    <a class='edit-btn' href={`/${username}/${pageId}/edit`}>Edit this page</a>\n  {/if}\n</main>\n"
  ],
  "names": [],
  "mappings": "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"
}